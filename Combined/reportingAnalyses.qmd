---
title: "SelfAnchoring"
format: 
  html:
    toc: true
    html-math-method: katex
    css: styles.css
editor: visual
---

```{r, include=F}
#library(groundhog)
library(pacman)

# pkgs <-  c("lmerTest", "ggeffects","r2glmm", "tidyverse","here", "sjPlot", "ggpubr", "wesanderson", "effectsize","broom.mixed","corrr","report", "ez", "ggdist", "gtsummary")
# groundhog.day <- '2023-03-02'
# groundhog.library(pkgs, groundhog.day)

pacman::p_load("lmerTest", "ggeffects","r2glmm", "tidyverse","here", "sjPlot", "ggpubr", "wesanderson", "effectsize","broom.mixed","corrr","report", "ez", "ggdist", "gtsummary","brms","kableExtra","bayestestR","ordbetareg","correlation")

here::i_am("Combined/reportingAnalyses.qmd")

devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/corToOne.R")
devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/plotCommAxes.R")
devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/named.effects.ref.R")
```

```{r}
bayesCorPlot <- function(df){
df %>% 
    mutate(Parameter = factor(Parameter2, levels = Parameter2[order(rho)]),
           SE = (CI_high-CI_low)/3.92) %>%  # Order by correlation strength
    ggplot(aes(x = Parameter, y = rho )) +
    geom_bar(stat = "identity") +
    ylab("Correlation Coefficient") +
    xlab("Individual Differences") + theme_grey(base_size = 9)  + theme(axis.text.x = element_text(angle = 90,hjust = 1)) +
    theme(axis.text.x = element_text( 
        size = 9, angle = 45, vjust = 1)) + theme(axis.title.x = element_text(vjust=1.9)) + theme(axis.text=element_text(size=9),
                                                                                                  axis.title=element_text(size=9,face="bold")) + theme(legend.text = element_text(size=9)) + theme(panel.border = element_rect(colour = "black", fill = NA, size =1)) + theme(legend.title = element_blank()) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
                                                                                                                                                                                                                                                                                                                      panel.background = element_blank(), axis.line = element_line(colour = "black")) +
    geom_errorbar(aes(ymin=rho-SE, ymax=rho+SE), width=.2,
                  position=position_dodge(.9)) 
}
```

Workspace

```{r}
load("/Volumes/Research Project/Self-Anchoring/Combined/Combined/reportingAnalysesEnv.RData")
save.image("/Volumes/Research Project/Self-Anchoring/Combined/Combined/reportingAnalysesEnv.RData")
```

```{r}
load("/Volumes/Research Project/Self-Anchoring/Combined/Combined/reportingAnalysesEnv_2023_05_07.RData")
save.image("/Volumes/Research Project/Self-Anchoring/Combined/Combined/reportingAnalysesEnv_2023_05_07.RData")
```

# Study 1

```{r, include=F}
fullTest1 <- arrow::read_parquet(here("Study 1//Cleaning/output/fullTest.parquet"))
fullTrain1 <- arrow::read_parquet(here("Study 1/Cleaning/output/fullTrain.parquet"))
params1 <- arrow::read_parquet(here::here("Study 1/Cleaning/output/S_Logistic_1m_Oppose_Biasparams.parquet"))

traitsFreqs1 <- read.csv(here("Study 1//Cleaning/output/traitFreqOverUnder.csv"))

uSubs <- unique(fullTest1$subID)

indDiffs1 <- fullTest1[!duplicated(fullTest1$subID),]
indDiffs1 <- indDiffs1 %>% select(subID, groupHomoph, DS:SING.Inter)

fullTrain1 <- indDiffs1 %>% select(subID, groupHomoph) %>% full_join(fullTrain1, by = "subID")
```

```{r, include=F}
fullTest1$ingChoiceN <- as.factor(fullTest1$ingChoiceN)
fullTest1$novel <- as.factor(fullTest1$novel)
fullTest1$selfResp.Z <- as.numeric(scale(fullTest1$selfResp)[,1])
fullTest1$SE.Z <- as.numeric(scale(fullTest1$SE)[,1])
fullTest1$iSE.Z <- as.numeric(scale(fullTest1$iSE)[,1])
fullTest1$oSE.Z <- as.numeric(scale(fullTest1$oSE)[,1])
fullTest1$predicted.Z <- as.numeric(scale(fullTest1$predicted)[,1])
fullTest1$slope.Z <- as.numeric(scale(fullTest1$slope)[,1])
fullTest1$entropy.Z <- as.numeric(scale(fullTest1$entropy)[,1])
fullTest1$WSR.Z <- as.numeric(scale(fullTest1$WSR)[,1])
fullTest1$neighAveOutSE.Z <- as.numeric(scale(fullTest1$neighAveOutSE)[,1])
fullTest1$neighAveAllSE.Z <- as.numeric(scale(fullTest1$neighAveAllSE)[,1])
fullTest1$neighAveInSE.Z <- as.numeric(scale(fullTest1$neighAveInSE)[,1])
fullTest1$evalLOO.Z <- as.numeric(scale(fullTest1$evalLOO)[,1])
fullTest1$propCorrLOO.Z <- as.numeric(scale(fullTest1$propCorrLOO)[,1])
fullTest1$propCorr.Z <- as.numeric(scale(fullTest1$propCorr)[,1])
fullTest1$desirability.Z <- as.numeric(scale(fullTest1$desirability)[,1])
fullTest1$er.Z <- as.numeric(scale(fullTest1$er)[,1])
fullTest1$outDegree.Z <- as.numeric(scale(fullTest1$outDegree)[,1])
fullTest1$inDegree.Z <- as.numeric(scale(fullTest1$inDegree)[,1])
fullTest1$groupHomoph.Z <- as.numeric(scale(fullTest1$groupHomoph)[,1])

fullTest1$novel <- as.factor(fullTest1$novel)
levels(fullTest1$novel) <- list("Trained"  = "0", "Held Out" = "1")

fullTrain1$metaContrastS <- log(fullTrain1$metaContrastS)
fullTrain1$metaContrastS.Z <- as.numeric(scale(fullTrain1$metaContrastS)[,1])
fullTrain1$inGsimS.Z <- as.numeric(scale(fullTrain1$inGsimS)[,1])
fullTrain1$outGsimS.Z <- as.numeric(scale(fullTrain1$outGsimS)[,1])

ncores = parallel::detectCores()
options(mc.cores = parallel::detectCores())

fullTest1$RT.Z <- log(fullTest1$RT)
fullTest1[is.infinite(fullTest1$RT.Z),] <- NA
fullTest1$RT.Z <- scale(fullTest1$RT.Z)
```

## **People Classify Desirable Traits as Ingroup Characteristic**

```{r}
m1 <- glmer( ingChoiceN ~ desirability.Z +  ( desirability.Z | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m1 %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )

DES.ING <-brm( ingChoiceN ~ desirability.Z + ( desirability.Z | subID) + (1 | trait), data=fullTest1, cores=ncores, family = bernoulli(link = "logit") )
sexit(DES.ING) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## **People Classify Self-Descriptive Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ selfResp.Z +  ( selfResp.Z | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )

```

```{r}
SELF.ING <-brm( ingChoiceN ~ selfResp.Z +  ( selfResp.Z | subID) + ( 1 | trait), data=fullTest1, cores=ncores, family = bernoulli(link = "logit") )
sexit(SELF.ING) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## **People Classify Similar-to-Self Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ WSR.Z + ( WSR.Z | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )

```

```{r}
WSR.ING <-brm( ingChoiceN ~ WSR.Z + ( WSR.Z | subID) + ( 1 | trait), data=fullTest1, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSR.ING) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Do people use similarity-to-self for novel traits?

No difference between novel and observed traits

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * novel + ( WSR.Z + novel | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )

parameters::equivalence_test(m, rule = "cet")
```

```{r}
WSRNOV.ING <-brm( ingChoiceN ~ WSR.Z * novel + ( WSR.Z + novel | subID) + ( 1 | trait), data=fullTest1, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRNOV.ING) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
equivalence_test(WSRNOV.ING, rule = "bayes")
```

### Does effect of similarity-to-self differ depending on degree centrality?

No effect

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * outDegree.Z + ( WSR.Z + outDegree.Z | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )

```

```{r}
WSROUT.ING <-brm( ingChoiceN ~ WSR.Z * outDegree.Z + ( WSR.Z + outDegree.Z | subID) + ( 1 | trait), data=fullTest1, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSROUT.ING) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

Small but nonsignificant differences for higher indegree traits

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * inDegree.Z + ( WSR.Z + inDegree.Z | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSRIN.ING <-brm( ingChoiceN ~ WSR.Z * inDegree.Z + ( WSR.Z + inDegree.Z | subID) + ( 1 | trait), data=fullTest1, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRIN.ING) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## Uncertainty's Effect on Ingroup Classification

```{r}
UNC.ING <-brm( ingChoiceN ~ entropy.Z + ( entropy.Z | subID) + ( 1 | trait), data=fullTest1, cores=ncores, family = bernoulli(link = "logit") )
sexit(UNC.ING) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## **Projection to the Ingroup, Rather than Rejection of the Outgroup**

### Metacontrast ratio (summed similarity to ingroup over summed similarity to outgroup) is strongly associated with self-descriptiveness

```{r}
m <- lmer( scale(selfResp) ~ metaContrastS.Z  + (  metaContrastS.Z | subID) + (1 | trait), data = fullTrain1)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
MCS.SR <-brm( selfResp ~ metaContrastS.Z + (  metaContrastS.Z | subID) + (1 | trait), data = fullTrain1, cores=ncores, family = cumulative(link = "logit") )
sexit(MCS.SR) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### What are the relative contributions summed similarity to ingroup and summed similarity to outgroup?

```{r}
m <- lmer( scale(selfResp) ~ inGsimS.Z + outGsimS.Z  + (  inGsimS.Z + outGsimS.Z | subID) + (1 | trait), data = fullTrain1)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
ISOS.SR <-brm( selfResp ~ inGsimS.Z + outGsimS.Z + (  inGsimS.Z + outGsimS.Z | subID) + (1 | trait), data = fullTrain1, cores=ncores, family = cumulative(link = "logit") )
sexit(ISOS.SR) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## Correlates of Homophily in Group Classifications

```{r}
ghforplot1 <- indDiffs1 %>% select(groupHomoph, DS:SING.Inter) %>% correlation(bayesian=T) %>% filter(Parameter1 == "groupHomoph" | Parameter2 == "groupHomoph") %>% arrange(rho)
ghforplot1
bayesCorPlot(ghforplot1)
```

## Computational Model

### Model Performance

### Parameter Recovery

### Parameter Correlations with Individual Differences

```{r}
indDiffsp1 <- indDiffs1 %>% right_join(params1, by = "subID")
```

#### Projection Rate

```{r}
mforplot1 <- indDiffsp1 %>% select(m, groupHomoph, DS:SING.Inter) %>% correlation(bayesian=T) %>% filter(Parameter1 == "m" | Parameter2 == "m") %>% arrange(rho)
mforplot1
bayesCorPlot(mforplot1)

mfortable1 <- as_tibble(mforplot1) %>% select(Parameter2, rho, CI_low, CI_high)
mfortable1[2:4] <- apply(mfortable1[2:4], 2, function(x) round(x, 3))
mfortable1 <- tibble("Measure"=mfortable1$Parameter2,
                     "Correlation"=paste0(mfortable1$rho, " [",mfortable1$CI_low, " - ", mfortable1$CI_high, "]"))
write.table(mfortable1, file = "/Volumes/Research Project/Self-Anchoring/Tables/mfortable1.txt", sep = ",", quote = FALSE, row.names = F)
```

#### Temperature

```{r}
tempforplot1 <- indDiffsp1 %>% select(Temp, groupHomoph, DS:SING.Inter) %>% correlation(bayesian=T) %>% filter(Parameter1 == "Temp" | Parameter2 == "Temp") %>% arrange(rho)
tempforplot1
bayesCorPlot(tempforplot1)

tempfortable1 <- as_tibble(tempforplot1) %>% select(Parameter2, rho, CI_low, CI_high)
tempfortable1[2:4] <- apply(tempfortable1[2:4], 2, function(x) round(x, 3))
tempfortable1 <- tibble("Measure"=tempfortable1$Parameter2,
                     "Correlation"=paste0(tempfortable1$rho, " [",tempfortable1$CI_low, " - ", tempfortable1$CI_high, "]"))
write.table(tempfortable1, file = "/Volumes/Research Project/Self-Anchoring/Tables/tempfortable1.txt", sep = ",", quote = FALSE, row.names = F)
```

#### Bias

```{r}
biasforplot1 <- indDiffsp1 %>% select(bias, groupHomoph, DS:SING.Inter) %>% correlation(bayesian=T) %>% filter(Parameter1 == "bias" | Parameter2 == "bias") %>% arrange(rho)
biasforplot1
bayesCorPlot(biasforplot1)

biasfortable1 <- as_tibble(biasforplot1) %>% select(Parameter2, rho, CI_low, CI_high)
biasfortable1[2:4] <- apply(biasfortable1[2:4], 2, function(x) round(x, 3))
biasfortable1 <- tibble("Measure"=biasfortable1$Parameter2,
                     "Correlation"=paste0(biasfortable1$rho, " [",biasfortable1$CI_low, " - ", biasfortable1$CI_high, "]"))
write.table(biasfortable1, file = "/Volumes/Research Project/Self-Anchoring/Tables/biasfortable1.txt", sep = ",", quote = FALSE, row.names = F)
```

# Study 2

```{r, include = F}
fullTest2 <- arrow::read_parquet(here("Study 2//Cleaning/output/fullTest.parquet"))
fullTrain2 <- arrow::read_parquet(here("Study 2/Cleaning/output/fullTrain.parquet"))

traitsFreqs1 <- read.csv(here("Study 2//Cleaning/output/traitFreqOverUnder.csv"))

params.UCLA <- arrow::read_parquet(here::here("Study 2/Cleaning/output/S_Logistic_1m_Oppose_Biasparams.UCLA.parquet"))
params.CSULA <- arrow::read_parquet(here::here("Study 2/Cleaning/output/S_Logistic_1m_Oppose_Biasparams.CSULA.parquet"))
params.NotUCR <- arrow::read_parquet(here::here("Study 2/Cleaning/output/S_Logistic_1m_Oppose_Biasparams.NotUCR.parquet"))
params2 <- rbind(
  cbind(params.UCLA,condition="UCLA"),
  cbind(params.CSULA,condition="CSU LA"),
  cbind(params.NotUCR,condition="Not UCR")
  )

uSubs <- unique(fullTest2$subID)

indDiffs2 <- fullTest2[!duplicated(fullTest2$subID),]


fullTrain2 <- indDiffs2 %>% select(subID, groupHomoph) %>% full_join(fullTrain2, by = "subID")
```

```{r, include = F}
fullTest2$ingChoiceN <- as.factor(fullTest2$ingChoiceN)
fullTest2$novel <- as.factor(fullTest2$novel)
fullTest2$selfResp.Z <- as.numeric(scale(fullTest2$selfResp)[,1])
fullTest2$SE.Z <- as.numeric(scale(fullTest2$SE)[,1])
fullTest2$iSE.Z <- as.numeric(scale(fullTest2$iSE)[,1])
fullTest2$oSE.Z <- as.numeric(scale(fullTest2$oSE)[,1])
fullTest2$predicted.Z <- as.numeric(scale(fullTest2$predicted)[,1])
fullTest2$slope.Z <- as.numeric(scale(fullTest2$slope)[,1])
fullTest2$entropy.Z <- as.numeric(scale(fullTest2$entropy)[,1])
fullTest2$WSR.Z <- as.numeric(scale(fullTest2$WSR)[,1])
fullTest2$neighAveOutSE.Z <- as.numeric(scale(fullTest2$neighAveOutSE)[,1])
fullTest2$neighAveAllSE.Z <- as.numeric(scale(fullTest2$neighAveAllSE)[,1])
fullTest2$neighAveInSE.Z <- as.numeric(scale(fullTest2$neighAveInSE)[,1])
fullTest2$evalLOO.Z <- as.numeric(scale(fullTest2$evalLOO)[,1])
fullTest2$desirability.Z <- as.numeric(scale(fullTest2$desirability)[,1])
fullTest2$er.Z <- as.numeric(scale(fullTest2$er)[,1])
fullTest2$outDegree.Z <- as.numeric(scale(fullTest2$outDegree)[,1])
fullTest2$inDegree.Z <- as.numeric(scale(fullTest2$inDegree)[,1])

fullTest2$novel <- as.factor(fullTest2$novel)
levels(fullTest2$novel) <- list("Trained"  = "0", "Held Out" = "1")

fullTrain2$metaContrastS <- (fullTrain2$inGsimS/fullTrain2$outGsimS)
fullTrain2$metaContrastS <- log(fullTrain2$metaContrastS)
fullTrain2$metaContrastS[is.infinite(fullTrain2$metaContrastS)] <- NA
fullTrain2$metaContrastS.Z <- as.numeric(scale(fullTrain2$metaContrastS)[,1])
fullTrain2$inGsimS.Z <- as.numeric(scale(fullTrain2$inGsimS)[,1])
fullTrain2$outGsimS.Z <- as.numeric(scale(fullTrain2$outGsimS)[,1])

fullTest2$outgroup <- as.factor(fullTest2$outgroup)
fullTest2$outgroup <- relevel(fullTest2$outgroup,"Not UCR")

fullTrain2$outgroup <- as.factor(fullTrain2$outgroup)
fullTrain2$outgroup <- relevel(fullTrain2$outgroup,"Not UCR")

fullTest2$outgroupE <- named.effects.ref(fullTest2$outgroup, "Not UCR")

indDiffs2$outgroup <- as.factor(indDiffs2$outgroup)
indDiffs2$outgroup <- relevel(indDiffs2$outgroup,"UCLA")
```

## **Differences Across Univerisities in Perceived Warmth and Status**

### Warmth

```{r, echo=F}
warmthDf <- pivot_longer(indDiffs2, cols=starts_with("Therm_"), names_to="University", values_to="Warmth") %>% select(subID, University, Warmth) %>% drop_na()
warmthDf$University <- gsub("Therm_1","UCR", warmthDf$University)
warmthDf$University <- gsub("Therm_2","UCLA", warmthDf$University)
warmthDf$University <- gsub("Therm_4","CSU LA", warmthDf$University)

warmthDf$University <- as.factor(warmthDf$University)
warmthDf$subID <- as.factor(warmthDf$subID)
warmthDf$University <- relevel(warmthDf$University, ref = "UCR")
#warmthDf$University <- named.effects.ref(warmthDf$University, "UCR")
m <- lmer( scale(Warmth) ~ University +  ( 1  | subID), data = warmthDf)
summary(m)
ggpredict(m, c("University")) %>% plot()
```

```{r}
warmthDf$WarmthD <- warmthDf$Warmth/100
WARM.UNI <- ordbetareg(WarmthD ~ as.factor(University) +
                               (1|subID), 
                       data=warmthDf,
                cores=ncores)
sexit(WARM.UNI) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describeBy(warmthDf$WarmthD, warmthDf$University)
```

```{r}
m<-ezANOVA(warmthDf, dv = Warmth, wid = subID, between = as.factor(University) )
m

indDiffs2$groupHomoph.Z <- scale(indDiffs2$groupHomoph)
ggplot(warmthDf, aes(University, Warmth)) + 
  ggdist::stat_halfeye(adjust = .5, width = .7, .width = 0, justification = -.2, point_colour = NA) + 
  geom_boxplot(width = .2, outlier.shape = NA) + 
  geom_jitter(width = .05, alpha = .3) + labs(y="Perceived Warmth",x="University") + jtools::theme_apa()
```

### Status

```{r, echo=F}
indDiffs2$Status <- NULL
statusDf <- pivot_longer(indDiffs2, cols=ends_with("_Status"), names_to="University", values_to="Status") %>% select(subID, University, Status) %>% drop_na()
statusDf$University <- gsub("_Status","", statusDf$University)

statusDf$University <- as.factor(statusDf$University)
statusDf$subID <- as.factor(statusDf$subID)
statusDf$University <- relevel(statusDf$University, ref = "UCR")

m <- lmer( scale(Status) ~ University +  ( 1  | subID), data = statusDf)
summary(m)
ggpredict(m, c("University")) %>% plot()
```

```{r}
STAT.UNIV <-brm( Status ~ University + (  1 | subID), data = statusDf, cores=ncores, family = cumulative(link = "logit") )
sexit(STAT.UNIV) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
psych::describeBy(statusDf$Status, statusDf$University)
```

```{r}
m<-ezANOVA(statusDf, dv = Status, wid = subID, between = as.factor(University) )
m

ggplot(statusDf, aes(University, Status)) + 
  ggdist::stat_halfeye(adjust = .5, width = .7, .width = 0, justification = -.2, point_colour = NA) + 
  geom_boxplot(width = .2, outlier.shape = NA) + 
  geom_jitter(width = .05, alpha = .3) + labs(y="Perceived Status",x="University") + jtools::theme_apa()
```

## **People Classify Desirable Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ desirability.Z +  ( desirability.Z | subID) + ( 1 | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
DES.ING.2 <-brm( ingChoiceN ~ desirability.Z + ( desirability.Z | subID) + ( 1 | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(DES.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ desirability.Z * outgroup +  ( desirability.Z | subID) + ( outgroup | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
DES.ING.COND.2 <-brm( ingChoiceN ~ desirability.Z * outgroup + ( desirability.Z | subID) + ( outgroup | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(DES.ING.COND.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(DES.ING.COND.2, c("desirability.Z", "outgroup")) %>% plot()
```

## **People Classify Self-Descriptive Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ selfResp.Z +  ( selfResp.Z | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
SR.ING.2 <-brm( ingChoiceN ~ selfResp.Z + ( selfResp.Z | subID) + ( 1 | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(SR.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ selfResp.Z * outgroup +  ( selfResp.Z | subID) + ( outgroup | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
SR.ING.COND.2 <-brm( ingChoiceN ~ selfResp.Z * outgroup + ( selfResp.Z | subID) + ( outgroup | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(SR.ING.COND.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(SR.ING.COND.2, c("selfResp.Z", "outgroup")) %>% plot()
```

## **People Classify Similar-to-Self Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ WSR.Z + ( WSR.Z | subID) + ( 1 | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSR.ING.2 <-brm( ingChoiceN ~ WSR.Z + ( WSR.Z | subID) + ( 1 | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSR.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * outgroup + ( WSR.Z | subID) + ( outgroup | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * outgroup * MGIS + ( WSR.Z | subID) + ( outgroup | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
```

```{r}
fullTest2$RT <- log(fullTest2$RT)
fullTest2$RT[is.infinite(fullTest2$RT)] <- NA
m <- lmer( RT ~ fam * outgroup + ( fam | subID) + ( outgroup | trait), data = fullTest2)
summary(m)
```

```{r}
WSR.ING.COND.2test <- brm( ingChoiceN ~ WSR.Z * outgroup + desirability.Z + entropy.Z + fam + novel + ( WSR.Z | subID) + ( outgroup | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSR.ING.COND.2test) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(WSR.ING.COND.2test, c("WSR.Z", "outgroup")) %>% plot()
```

```{r}
WSR.ING.COND.2 <- brm( ingChoiceN ~ WSR.Z * outgroup + ( WSR.Z | subID) + ( outgroup | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSR.ING.COND.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(WSR.ING.COND.2, c("WSR.Z", "outgroup")) %>% plot()
```

### Do people use similarity-to-self for novel traits?

No difference between novel and observed traits

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * novel + ( WSR.Z + novel | subID) + ( 1 | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
parameters::equivalence_test(m)
```

```{r}
WSRNOV.ING.2 <-brm( ingChoiceN ~ WSR.Z * novel + ( WSR.Z + novel | subID) + ( 1 | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRNOV.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
equivalence_test(WSRNOV.ING.2, rule = "bayes")
```

#### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * novel * outgroup + ( WSR.Z + novel | subID) + ( outgroup | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
parameters::equivalence_test(m)
```

```{r}
WSRNOV.ING.COND.2 <-brm( ingChoiceN ~ WSR.Z * novel * outgroup + ( WSR.Z + novel | subID) + ( outgroup | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRNOV.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
equivalence_test(WSRNOV.ING.COND.2, rule = "bayes")
```

### Does effect of similarity-to-self differ depending on degree centrality?

No effect

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * outDegree.Z + ( WSR.Z + outDegree.Z | subID) + ( 1 | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSROUT.ING.2 <-brm( ingChoiceN ~ WSR.Z * outDegree.Z + ( WSR.Z + outDegree.Z | subID) + ( 1 | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSROUT.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

Small but nonsignificant differences for higher indegree traits

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * inDegree.Z + ( WSR.Z + inDegree.Z | subID) + ( 1 | trait), data = fullTest2, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSRIN.ING.2 <-brm( ingChoiceN ~ WSR.Z * inDegree.Z + ( WSR.Z + inDegree.Z | subID) + ( 1 | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRIN.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## Uncertainty's Effect on Ingroup Classification

```{r}
UNC.ING.2 <-brm( ingChoiceN ~ entropy.Z + ( entropy.Z | subID) + ( 1 | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(UNC.ING.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Differing by Condition

```{r}
UNC.ING.COND.2 <-brm( ingChoiceN ~ entropy.Z * outgroup + ( entropy.Z | subID) + ( outgroup | trait), data=fullTest2, cores=ncores, family = bernoulli(link = "logit") )
sexit(UNC.ING.COND.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## **Projection to the Ingroup, Rather than Rejection of the Outgroup**

### Metacontrast ratio (summed similarity to ingroup over summed similarity to outgroup) is strongly associated with self-descriptiveness

```{r}
m <- lmer( scale(selfResp) ~ metaContrastS.Z  + (  metaContrastS.Z | subID) + (1 | trait), data = fullTrain2)
summary(m)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
MCS.SR.2 <-brm( selfResp ~ metaContrastS.Z + (  metaContrastS.Z | subID) + (1 | trait), data = fullTrain2, cores=ncores, family = cumulative(link = "logit") )
sexit(MCS.SR.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Metacontrast ratio compared across condition

```{r}
m <- lmer( scale(selfResp) ~ metaContrastS.Z * outgroup  + (  metaContrastS.Z | subID) + ( outgroup | trait), data = fullTrain2)
summary(m)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
MCS.SR.COND.2 <-brm( selfResp ~ metaContrastS.Z * outgroup + (  metaContrastS.Z | subID) + ( outgroup | trait), data = fullTrain2, cores=ncores, family = cumulative(link = "logit") )
sexit(MCS.SR.COND.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### What are the relative contributions summed similarity to ingroup and summed similarity to outgroup?

```{r}
m <- lmer( scale(selfResp) ~ inGsimS.Z * Therm_1 * outgroup + outGsimS.Z * Therm_1 * outgroup
           + (  inGsimS.Z + outGsimS.Z | subID) + (1 | trait), data = fullTrain2)
summary(m)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
ISOS.SR.2 <-brm( selfResp ~ inGsimS.Z + outGsimS.Z + (  inGsimS.Z + outGsimS.Z | subID) + (1 | trait), data = fullTrain2, cores=ncores, family = cumulative(link = "logit") )
sexit(ISOS.SR.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Summed Similarity Compared Across Conditions

```{r}
m <- lmer( scale(selfResp) ~ inGsimS.Z * outgroup + outGsimS.Z + (  inGsimS.Z + outGsimS.Z | subID) + ( outgroup | trait), data = fullTrain2)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
m <- lmer( scale(selfResp) ~ inGsimS.Z * outgroup * MGIS + outGsimS.Z * outgroup * MGIS + (  1 | subID) + ( 1 | trait), data = fullTrain2)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
ISOS.SR.COND.2 <-brm( selfResp ~ inGsimS.Z * outgroup + outGsimS.Z * outgroup + (  inGsimS.Z + outGsimS.Z | subID) + ( outgroup | trait), data = fullTrain2, cores=ncores, family = cumulative(link = "logit") )
sexit(ISOS.SR.COND.2) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## Correlates of Homophily in Group Classifications

```{r}
ghforplot2 <- indDiffs2 %>% select(groupHomoph, seHomoph, SStatus:IdImp) %>% correlation(bayesian=T) %>% filter(Parameter1 == "groupHomoph" | Parameter2 == "groupHomoph") %>% arrange(rho)
ghforplot2
bayesCorPlot(ghforplot2)
```

## Differences in Homophily

```{r}
GH.COND.2 <- brm( scale(groupHomoph) ~ outgroup, data=indDiffs2)
sexit(GH.COND.2) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffs2$groupHomoph, indDiffs2$outgroup)
```

## Computational Model

TBD

### Model Performance

### Parameter Recovery

### Parameter Correlations with Individual Differences

```{r}
indDiffsp2 <- indDiffs2 %>% right_join(params2, by = "subID")
```

#### Projection Rate

```{r}
mforplot2 <- indDiffsp2 %>% select(m, groupHomoph, SStatus:IdImp) %>% correlation(bayesian=T) %>% filter(Parameter1 == "m" | Parameter2 == "m") %>% arrange(rho)
mforplot2
bayesCorPlot(mforplot2)
```

##### By Condition

```{r}
mforplot2c <- indDiffsp2 %>% group_by(condition) %>% select(m, groupHomoph, SStatus:IdImp) %>% correlation(bayesian=T) %>% filter(Parameter1 == "m" | Parameter2 == "m") %>% arrange(rho)
mforplot2c <- c("UCLA","CSU LA","Not UCR") %>% map(\(x) filter(mforplot2c, Group==x))
lapply(mforplot2c, bayesCorPlot)
```

#### Temperature

```{r}
tempforplot2 <- indDiffsp2 %>% select(Temp, groupHomoph, SStatus:IdImp) %>% correlation(bayesian=T) %>% filter(Parameter1 == "Temp" | Parameter2 == "Temp") %>% arrange(rho)
tempforplot2
bayesCorPlot(tempforplot2)
```

##### By Condition

```{r}
tempforplot2 <- indDiffsp2 %>% group_by(condition) %>% select(Temp, groupHomoph, SStatus:IdImp) %>% correlation(bayesian=T) %>% filter(Parameter1 == "Temp" | Parameter2 == "Temp") %>% arrange(rho)
tempforplot2c <- c("UCLA","CSU LA","Not UCR") %>% map(\(x) filter(tempforplot2, Group==x))
lapply(tempforplot2c, bayesCorPlot)
```

#### Bias

```{r}
biasforplot2 <- indDiffsp2 %>% select(bias, groupHomoph, SStatus:IdImp) %>% correlation(bayesian=T) %>% filter(Parameter1 == "bias" | Parameter2 == "bias") %>% arrange(rho)
biasforplot2
bayesCorPlot(biasforplot2)
```

### Parameter Differences

#### Projection Rate

```{r}
PR.COND.2 <- brm( scale(m) ~ outgroup, data=indDiffsp2)
sexit(PR.COND.2) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffsp2$m, indDiffsp2$outgroup)
```

#### Bias

```{r}
BIAS.COND.2 <- brm( scale(bias) ~ outgroup, data=indDiffsp2)
sexit(BIAS.COND.2) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffsp2$bias, indDiffsp2$outgroup)
```

# Study 3

```{r, include = F}
fullTest3 <- arrow::read_parquet(here("Study 3//Cleaning/output/fullTest.parquet"))
fullTrain3 <- arrow::read_parquet(here("Study 3/Cleaning/output/fullTrain.parquet"))

params.Majority <- arrow::read_parquet(here::here("Study 3/Cleaning/output/S_Logistic_1m_Oppose_Biasparams.Majority.parquet"))
params.Minority <- arrow::read_parquet(here::here("Study 3/Cleaning/output/S_Logistic_1m_Oppose_Biasparams.Minority.parquet"))
params3 <- rbind(
  cbind(params.Majority,condition="Majority"),
  cbind(params.Minority,condition="Minority")
  )

params3 <- rbind(
  cbind(params.Majority),#,condition="Majority"),
  cbind(params.Minority)#,condition="Minority")
  )

uSubs <- unique(fullTest3$subID)

indDiffs3 <- fullTest3[!duplicated(fullTest3$subID),]

fullTrain3 <- indDiffs3 %>% select(subID, groupHomoph) %>% full_join(fullTrain3, by = "subID")
fullTrain3 <- params3 %>% select(subID, m, Temp, bias) %>% full_join(fullTrain3, by = "subID")
fullTrain3 <- fullTest3 %>% select(subID, trait, entropy, entropy.Z) %>% right_join(fullTrain3, by = c("subID","trait"))
```

```{r, include = F}
fullTest3$ingChoiceN <- as.factor(fullTest3$ingChoiceN)
fullTest3$novel <- as.factor(fullTest3$novel)
fullTest3$selfResp.Z <- as.numeric(scale(fullTest3$selfResp)[,1])
fullTest3$SE.Z <- as.numeric(scale(fullTest3$SE)[,1])
fullTest3$iSE.Z <- as.numeric(scale(fullTest3$iSE)[,1])
fullTest3$oSE.Z <- as.numeric(scale(fullTest3$oSE)[,1])
fullTest3$predicted.Z <- as.numeric(scale(fullTest3$predicted)[,1])
fullTest3$slope.Z <- as.numeric(scale(fullTest3$slope)[,1])
fullTest3$entropy.Z <- as.numeric(scale(fullTest3$entropy)[,1])
fullTest3$WSR.Z <- as.numeric(scale(fullTest3$WSR)[,1])
fullTest3$neighAveOutSE.Z <- as.numeric(scale(fullTest3$neighAveOutSE)[,1])
fullTest3$neighAveAllSE.Z <- as.numeric(scale(fullTest3$neighAveAllSE)[,1])
fullTest3$neighAveInSE.Z <- as.numeric(scale(fullTest3$neighAveInSE)[,1])
fullTest3$evalLOO.Z <- as.numeric(scale(fullTest3$evalLOO)[,1])
fullTest3$desirability.Z <- as.numeric(scale(fullTest3$desirability)[,1])
fullTest3$er.Z <- as.numeric(scale(fullTest3$er)[,1])
fullTest3$outDegree.Z <- as.numeric(scale(fullTest3$outDegree)[,1])
fullTest3$inDegree.Z <- as.numeric(scale(fullTest3$inDegree)[,1])

fullTest3$novel <- as.factor(fullTest3$novel)
levels(fullTest3$novel) <- list("Trained"  = "0", "Held Out" = "1")

fullTrain3$metaContrastS <- (fullTrain3$inGsimS/fullTrain3$outGsimS)
fullTrain3$metaContrastS <- log(fullTrain3$metaContrastS)
fullTrain3$metaContrastS[is.infinite(fullTrain3$metaContrastS)] <- NA
fullTrain3$metaContrastS.Z <- as.numeric(scale(fullTrain3$metaContrastS)[,1])
fullTrain3$inGsimS.Z <- as.numeric(scale(fullTrain3$inGsimS)[,1])
fullTrain3$outGsimS.Z <- as.numeric(scale(fullTrain3$outGsimS)[,1])

fullTest3$condition <- as.factor(fullTest3$condition)
fullTest3$condition <- relevel(fullTest3$condition,"Majority")

fullTrain3$condition <- as.factor(fullTrain3$condition)
fullTrain3$condition <- relevel(fullTrain3$condition,"Majority")

fullTest3 <- fullTest3 %>% mutate(inOutTherm = case_when(
  condition == "Minority" ~ inMinorityTherm,
  condition == "Majority" ~ inMajorityTherm
)
                     )
```

## **Differences Across Univerisities in Perceived Warmth and Status**

### Warmth

```{r, echo=F}
warmthDf <- pivot_longer(indDiffs3, cols=starts_with("Therm_"), names_to="Group", values_to="Warmth") %>% select(subID, Group, Warmth) %>% drop_na()
warmthDf$Group <- gsub("Therm_1","White", warmthDf$Group)
warmthDf$Group <- gsub("Therm_2","Asian", warmthDf$Group)
warmthDf$Group <- gsub("Therm_4","Latino", warmthDf$Group)

warmthDf$Group <- as.factor(warmthDf$Group)
warmthDf$subID <- as.factor(warmthDf$subID)
warmthDf$Group <- relevel(warmthDf$Group, ref = "White")

m <- lmer( scale(Warmth) ~ Group +  ( 1  | subID), data = warmthDf)
summary(m)
ggpredict(m, c("Group")) %>% plot()

m<-ezANOVA(warmthDf, dv = Warmth, wid = subID, between = as.factor(Group) )
m

ggplot(warmthDf, aes(Group, Warmth)) + 
  ggdist::stat_halfeye(adjust = .5, width = .7, .width = 0, justification = -.2, point_colour = NA) + 
  geom_boxplot(width = .2, outlier.shape = NA) + 
  geom_jitter(width = .05, alpha = .3) + labs(y="Perceived Warmth",x="University") + jtools::theme_apa()
```

```{r}
warmthDf$WarmthD <- warmthDf$Warmth/100
WARM.RACE <- ordbetareg(WarmthD ~ as.factor(Group) +
                               (1|subID), 
                       data=warmthDf,
                cores=ncores)
sexit(WARM.RACE) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describeBy(warmthDf$WarmthD, warmthDf$Group)
```

### Status

```{r, echo=F}
indDiffs3$Status <- NULL
statusDf <- pivot_longer(indDiffs3, cols=ends_with("_Status"), names_to="Group", values_to="Status") %>% select(subID, Group, Status) %>% drop_na()
statusDf$Group <- gsub("_Status","", statusDf$Group)

statusDf$Group <- as.factor(statusDf$Group)
statusDf$subID <- as.factor(statusDf$subID)
statusDf$Group <- relevel(statusDf$Group, ref = "White")

m <- lmer( scale(Status) ~ Group +  ( 1  | subID), data = statusDf)
summary(m)
ggpredict(m, c("Group")) %>% plot()

m<-ezANOVA(statusDf, dv = Status, wid = subID, between = as.factor(Group) )
m

ggplot(statusDf, aes(Group, Status)) + 
  ggdist::stat_halfeye(adjust = .5, width = .7, .width = 0, justification = -.2, point_colour = NA) + 
  geom_boxplot(width = .2, outlier.shape = NA) + 
  geom_jitter(width = .05, alpha = .3) + labs(y="Perceived Status",x="University") + jtools::theme_apa()
```

```{r}
STAT.GROUP <-brm( Status ~ Group + (  1 | subID), data = statusDf, cores=ncores, family = cumulative(link = "logit") )
sexit(STAT.GROUP) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
psych::describeBy(statusDf$Status, statusDf$Group)
```

## **People Classify Desirable Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ desirability.Z +  ( desirability.Z | subID) + ( 1 | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
DES.ING.3 <-brm( ingChoiceN ~ desirability.Z + ( desirability.Z | subID) + ( 1 | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(DES.ING.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ desirability.Z * condition +  ( desirability.Z | subID) + ( condition | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
DES.ING.COND.3 <-brm( ingChoiceN ~ desirability.Z * condition + ( desirability.Z | subID) + ( condition | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(DES.ING.COND.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(DES.ING.COND.3, c("desirability.Z", "condition")) %>% plot()
```

## **People Classify Self-Descriptive Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ selfResp.Z +  ( selfResp.Z | subID) + ( 1 | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
SR.ING.3 <-brm( ingChoiceN ~ selfResp.Z + ( selfResp.Z | subID) + ( 1 | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(SR.ING.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ selfResp.Z * condition +  ( selfResp.Z | subID) + ( condition | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
SR.ING.COND.3 <-brm( ingChoiceN ~ selfResp.Z * condition + ( selfResp.Z | subID) + ( condition | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(SR.ING.COND.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(SR.ING.COND.3, c("selfResp.Z", "condition")) %>% plot()
```

## **People Classify Similar-to-Self Traits as Ingroup Characteristic**

```{r}
m <- glmer( ingChoiceN ~ WSR.Z + ( WSR.Z | subID) + ( 1 | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSR.ING.3 <-brm( ingChoiceN ~ WSR.Z + ( WSR.Z | subID) + ( 1 | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSR.ING.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * condition * inOutTherm + ( WSR.Z | subID) + ( condition + inOutTherm | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa"),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSR.ING.COND.3 <- brm( ingChoiceN ~ WSR.Z * condition + ( WSR.Z | subID) + ( condition | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSR.ING.COND.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(WSR.ING.COND.3, c("WSR.Z", "condition")) %>% plot()
```

```{r}
test <- brm( ingChoiceN ~ WSR.Z * condition + desirability + racid + desirability.Z + selfResp.Z + novel + RT + entropy.Z + ( WSR.Z + desirability.Z + selfResp.Z + novel + entropy.Z | subID) + ( condition + racid | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(test) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
ggpredict(test, c("WSR.Z", "condition")) %>% plot()
```

### Do people use similarity-to-self for novel traits?

No difference between novel and observed traits

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * novel + ( WSR.Z + novel | subID) + ( 1 | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
parameters::equivalence_test(m)
```

```{r}
WSRNOV.ING.3 <-brm( ingChoiceN ~ WSR.Z * novel + ( WSR.Z + novel | subID) + ( 1 | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRNOV.ING.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
equivalence_test(WSRNOV.ING.3, rule = "bayes")
```

#### Compared across conditions

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * novel * condition + ( WSR.Z + novel | subID) + ( condition | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
parameters::equivalence_test(m)
```

```{r}
WSRNOV.ING.COND.3 <-brm( ingChoiceN ~ WSR.Z * novel * condition + ( WSR.Z + novel | subID) + ( condition | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRNOV.ING.COND.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
equivalence_test(WSRNOV.ING.COND.3, rule = "bayes")
```

### Does effect of similarity-to-self differ depending on degree centrality?

No effect

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * outDegree.Z + ( WSR.Z + outDegree.Z | subID) + ( 1 | trait), data = fullTest1, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSROUT.ING.3 <-brm( ingChoiceN ~ WSR.Z * outDegree.Z + ( WSR.Z + outDegree.Z | subID) + ( 1 | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSROUT.ING.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

Small but nonsignificant differences for higher indegree traits

```{r}
m <- glmer( ingChoiceN ~ WSR.Z * inDegree.Z + ( WSR.Z + inDegree.Z | subID) + ( 1 | trait), data = fullTest3, family = binomial, control = glmerControl(optimizer = "bobyqa",
                                    optCtrl = list(maxfun = 100000)),
    nAGQ = 1)
m %>%
  tbl_regression(
    exponentiate = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
```

```{r}
WSRIN.ING.3 <-brm( ingChoiceN ~ WSR.Z * inDegree.Z + ( WSR.Z + inDegree.Z | subID) + ( 1 | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(WSRIN.ING.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## 

## Uncertainty's Effect on Ingroup Classification

```{r}
test <-glmer( ingChoiceN ~ entropy.Z + WSR.Z + desirability.Z + ( entropy.Z | subID) + ( 1 | trait), data=fullTest3, family = binomial )
```

```{r}
UNC.ING.3 <-brm( ingChoiceN ~ entropy.Z + ( entropy.Z | subID) + ( 1 | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(UNC.ING.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Differing by Condition

```{r}
UNC.ING.COND.3 <-brm( ingChoiceN ~ entropy.Z * condition + ( entropy.Z | subID) + ( condition | trait), data=fullTest3, cores=ncores, family = bernoulli(link = "logit") )
sexit(UNC.ING.COND.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

## **Projection to the Ingroup, Rather than Rejection of the Outgroup**

### Metacontrast ratio (summed similarity to ingroup over summed similarity to outgroup) is strongly associated with self-descriptiveness

```{r}
m <- lmer( scale(selfResp) ~ metaContrastS.Z  + (  metaContrastS.Z | subID) + (1 | trait), data = fullTrain3)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
MCS.SR.3 <-brm( selfResp ~ metaContrastS.Z + (  metaContrastS.Z | subID) + (1 | trait), data = fullTrain3, cores=ncores, family = cumulative(link = "logit") )
sexit(MCS.SR.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()1
```

### Metacontrast ratio compared across condition

```{r}
m <- lmer( scale(selfResp) ~ metaContrastS.Z * condition  + (  metaContrastS.Z | subID) + ( condition | trait), data = fullTrain3)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
MCS.SR.COND.3 <-brm( selfResp ~ metaContrastS.Z * condition + (  metaContrastS.Z | subID) + ( condition | trait), data = fullTrain3, cores=ncores, family = cumulative(link = "logit") )
sexit(MCS.SR.COND.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### What are the relative contributions summed similarity to ingroup and summed similarity to outgroup?

```{r}
m <- lmer( scale(selfResp) ~ inGsimS.Z * condition + outGsimS.Z + (  inGsimS.Z + outGsimS.Z | subID) + (1 | trait), data = fullTrain3)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

### Summed Similarity to Ingroup Compared Across Conditions

```{r}
m <- lmer( scale(selfResp) ~ inGsimS.Z * condition + outGsimS.Z + (  inGsimS.Z + outGsimS.Z | subID) + ( outgroup | trait), data = fullTrain3)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
ISOS.SR.3 <-brm( selfResp ~ inGsimS.Z + outGsimS.Z + (  inGsimS.Z + outGsimS.Z | subID) + (1 | trait), data = fullTrain3, cores=ncores, family = cumulative(link = "logit") )
sexit(ISOS.SR.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

### Summed Similarity to Outgroup Compared Across Conditions

```{r}
m <- lmer( scale(selfResp) ~ inGsimS.Z + outGsimS.Z * condition + (  inGsimS.Z + outGsimS.Z | subID) + ( condition | trait), data = fullTrain3)
m %>%
  tbl_regression(
    pvalue_fun = ~ style_pvalue(.x, digits = 2),
  )
r2beta(m)
```

```{r}
ISOS.SR.COND.3 <-brm( selfResp ~ inGsimS.Z * condition + outGsimS.Z * condition + (  inGsimS.Z + outGsimS.Z | subID) + ( condition | trait), data = fullTrain3, cores=ncores, family = cumulative(link = "logit") )
sexit(ISOS.SR.COND.3) %>% as_tibble %>% mutate(OR = exp(Median), p = 2 * (1-Direction)) %>% kable()
```

```{r}
library(marginaleffects)
avg_comparisons(ISOS.SR.COND.3, variables = "outGsimS.Z", by = "condition")

avg_comparisons(ISOS.SR.COND.3, variables = c("outGsimS.Z", "condition"))
```

## Correlates of Homophily in Group Classifications

```{r}
ghforplot3 <- indDiffs3 %>% select(groupHomoph, SStatus:IdImp, -Condition, -mixed, -racid2) %>% correlation(bayesian=T) %>% filter(Parameter1 == "groupHomoph" | Parameter2 == "groupHomoph") %>% arrange(rho)
ghforplot3
bayesCorPlot(ghforplot3)
```

## Differences in Homophily

```{r}
GH.COND.3 <- brm( scale(groupHomoph) ~ condition + racid, data=indDiffsp3)
sexit(GH.COND.3) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffsp3$groupHomoph, indDiffsp3$condition)
```

## Computational Model

TBD

### Model Performance

### Parameter Recovery

### Parameter Correlations with Individual Differences

```{r}
indDiffsp3 <- indDiffs3 %>% right_join(params3, by = "subID")

# cur<-indDiffsp3[, c("m", "Temp","bias","groupHomoph")]
# PCAall<- prcomp(na.omit(cur),
#              center = TRUE,
#             scale. = TRUE)
```

#### Projection Rate

```{r}
indDiffsp3$inOutTherm <- ifelse(indDiffsp3$condition == "Majority", indDiffsp3$inMajorityTherm, indDiffsp3$inMinorityTherm)
indDiffsp3 <- indDiffsp3 %>% mutate(inWarm = case_when(
  racid == "Asian" ~ Therm_2,
  racid == "Latino" ~ Therm_4
),
outWarm = case_when(
  condition == "Majority" ~ Therm_1,
  condition == "Minority" & racid == "Asian" ~ Therm_4,
  condition == "Minority" & racid == "Latino" ~ Therm_2
),
otherWarm = case_when(
  racid == "Asian" ~ (Therm_1 + Therm_4)/2,
  racid == "Latino" ~ (Therm_1 + Therm_2)/2
)
)

mforplot3 <- indDiffsp3 %>% select(m, groupHomoph, SStatus:IdImp, inOutTherm, inWarm, outWarm, otherWarm, -Condition, -mixed, -racid2) %>% correlation(bayesian=T) %>% filter(Parameter1 == "m" | Parameter2 == "m") %>% arrange(rho)
mforplot3
bayesCorPlot(mforplot3)
```

##### By Condition

```{r}
mforplot3c <- indDiffsp3  %>% group_by(condition) %>% select(m, groupHomoph, SStatus:IdImp, inOutTherm, inWarm, outWarm, otherWarm, -mixed, -racid2)  %>% correlation(bayesian=T) %>% filter(Parameter1 == "m" | Parameter2 == "m") %>% arrange(rho)
mforplot3c <- c("Majority","Minority") %>% map(\(x) filter(mforplot3c, Group==x))
mforplot3c
lapply(mforplot3c, bayesCorPlot)
```

#### Temperature

```{r}
tempforplot3 <- indDiffsp3 %>% select(Temp, groupHomoph, SStatus:IdImp, -Condition, -mixed, -racid2) %>% correlation(bayesian=T) %>% filter(Parameter1 == "Temp" | Parameter2 == "Temp") %>% arrange(rho)
tempforplot3
bayesCorPlot(tempforplot3)
```

##### By Condition

```{r}
tempforplot3c <- indDiffsp3 %>% group_by(condition) %>% select(Temp, groupHomoph, SStatus:IdImp, -mixed, -racid2) %>% correlation(bayesian=T) %>% filter(Parameter1 == "Temp" | Parameter2 == "Temp") %>% arrange(rho)
tempforplot3c <- c("Majority", "Minority") %>% map(\(x) filter(tempforplot3c, Group==x))
lapply(tempforplot3c, bayesCorPlot)
```

#### Bias

```{r}
biasforplot3 <- indDiffsp3 %>% select(bias, groupHomoph, SStatus:IdImp, -Condition, -mixed, -racid2) %>% correlation(bayesian=T) %>% filter(Parameter1 == "bias" | Parameter2 == "bias") %>% arrange(rho)
biasforplot3
bayesCorPlot(biasforplot3)
```

##### By Condition

```{r}
biasforplot3c <- indDiffsp3 %>% group_by(condition) %>% select(bias, groupHomoph, SStatus:IdImp, -mixed, -racid2) %>% correlation(bayesian=T) %>% filter(Parameter1 == "bias" | Parameter2 == "bias") %>% arrange(rho)
biasforplot3c <- c("Majority", "Minority") %>% map(\(x) filter(biasforplot3c, Group==x))
lapply(biasforplot3c, bayesCorPlot)
```

### Parameter Differences

#### Projection Rate

```{r}
PR.COND.3 <- brm( scale(m) ~ condition, data=indDiffsp3)
sexit(PR.COND.3) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffsp3$m, indDiffsp3$condition)
```

```{r}
PR.COND.3 <- brm( scale(m) ~ condition + racid, data=indDiffsp3)
sexit(PR.COND.3) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffsp3$m, indDiffsp3$condition)
psych::describe.by(indDiffsp3$m, indDiffsp3$racid)
```

```{r}
test <- brm( scale(MGIS) ~ condition * racid, data=indDiffsp3)
sexit(test) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffsp3$m, indDiffsp3$condition)
psych::describe.by(indDiffsp3$m, indDiffsp3$racid)
```

#### Bias

```{r}
BIAS.COND.3 <- brm( scale(bias) ~ outgroup, data=indDiffsp3)
sexit(BIAS.COND.3) %>% as_tibble %>% mutate(p = 2 * (1-Direction)) %>% kable()
psych::describe.by(indDiffsp3$bias, indDiffsp2$outgroup)
```

# Testing

```{r}
test(emmeans(WSR.ING.COND.2, pairwise ~outgroup*WSR.Z, at = list(WSR.Z = -1)))
test(emmeans(WSR.ING.COND.2, pairwise ~outgroup*WSR.Z, at = list(WSR.Z = 0)))
test(emmeans(WSR.ING.COND.2, pairwise ~outgroup*WSR.Z, at = list(WSR.Z = 1)))
```

```{r}
emmeans(WSR.ING.COND.2, specs = pairwise ~ WSR.Z*outgroup)
```

```{r}
library(marginaleffects)
test2 <- test
test2$data$outgroup <- as.character(test2$data$outgroup)
test3 <- avg_comparisons(test, variables = "WSR.Z", by = "outgroup")
test4 <- avg_comparisons(test, variables = "WSR.Z", by = "outgroup", hypothesis = "pairwise")
```
